{"ast":null,"code":"import axios from 'axios';\nimport { tokenConfig } from './auth';\nimport { GET_CART, ADD_TO_CART_SUCCESS, ADD_TO_CART_FAIL, REMOVE_FROM_CART_SUCCESS, REMOVE_FROM_CART_FAIL, UPDATE_CART_SUCCESS, UPDATE_CART_FAIL, CLEAR_CART_SUCCESS, CLEAR_CART_FAIL } from \"./types\"; // GET CART\n\nexport const getCart = () => (dispatch, getState) => {\n  axios.post('https://alfinder.com/alfinder/public/api/user/cart/get', tokenConfig(getState)).then(res => {\n    console.log(res);\n    dispatch({\n      type: GET_CART,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // ADD TO CART\n\nexport const addToCart = id => (dispatch, getState) => {\n  axios.post('https://alfinder.com/alfinder/public/api/user/cart/add', {\n    product_id: id,\n    count: 1\n  }, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: ADD_TO_CART_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: ADD_TO_CART_FAIL,\n      payload: err\n    });\n    console.log(err);\n  });\n}; //REMOVE FROM CART\n\nexport const removeFromCart = id => (dispatch, getState) => {\n  axios.delete('', {\n    product_id: id\n  }, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: REMOVE_FROM_CART_SUCCESS,\n      payload: id\n    });\n  }).catch(err => {\n    dispatch({\n      type: REMOVE_FROM_CART_FAIL,\n      payload: err\n    });\n    console.log(err);\n  });\n}; // UPDATE CART\n\nexport const updateCart = () => (dispatch, getState) => {\n  axios.post('', {}).then(res => {\n    dispatch({\n      type: UPDATE_CART_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: UPDATE_CART_FAIL\n    });\n    console.log(err);\n  });\n}; // CLEAR CART\n\nexport const clearCart = () => (dispatch, getState) => {\n  axios.post('', {}).then(res => {\n    dispatch({\n      type: CLEAR_CART_SUCCESS,\n      payload: null\n    });\n  }).catch(err => {\n    dispatch({\n      type: CLEAR_CART_FAIL\n    });\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["/Users/ramtinmir/Alfinder Inc./Tech/Alfinder Inc./Alfinder Store (discountinued)/src/app/core/actions/cart.js"],"names":["axios","tokenConfig","GET_CART","ADD_TO_CART_SUCCESS","ADD_TO_CART_FAIL","REMOVE_FROM_CART_SUCCESS","REMOVE_FROM_CART_FAIL","UPDATE_CART_SUCCESS","UPDATE_CART_FAIL","CLEAR_CART_SUCCESS","CLEAR_CART_FAIL","getCart","dispatch","getState","post","then","res","console","log","type","payload","data","catch","err","addToCart","id","product_id","count","removeFromCart","delete","updateCart","clearCart"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { tokenConfig } from './auth'\nimport {\n  GET_CART,\n  ADD_TO_CART_SUCCESS,\n  ADD_TO_CART_FAIL,\n  REMOVE_FROM_CART_SUCCESS,\n  REMOVE_FROM_CART_FAIL,\n  UPDATE_CART_SUCCESS,\n  UPDATE_CART_FAIL,\n  CLEAR_CART_SUCCESS,\n  CLEAR_CART_FAIL,\n} from \"./types\";\n\n// GET CART\nexport const getCart = () => (dispatch, getState) => {\n    axios.post('https://alfinder.com/alfinder/public/api/user/cart/get', tokenConfig(getState))\n    .then(res => {\n        console.log(res);\n        dispatch({\n            type: GET_CART,\n            payload: res.data,\n        })\n    }).catch(err => console.log(err))\n};\n\n// ADD TO CART\nexport const addToCart = id => (dispatch, getState) => {\n    axios.post('https://alfinder.com/alfinder/public/api/user/cart/add', {\n        product_id: id,\n        count: 1\n    }, tokenConfig(getState))\n    .then(res => {\n        dispatch({\n            type: ADD_TO_CART_SUCCESS,\n            payload: res.data,\n        })\n    }).catch(err => {\n        dispatch({\n            type: ADD_TO_CART_FAIL,\n            payload: err\n        });\n        console.log(err);\n    })\n};\n\n//REMOVE FROM CART\nexport const removeFromCart = id => (dispatch, getState) => {\n    axios.delete('', {\n        product_id: id,\n    }, tokenConfig(getState))\n    .then(res => {\n        dispatch({\n            type: REMOVE_FROM_CART_SUCCESS,\n            payload: id,\n        })\n    }).catch(err => {\n        dispatch({\n            type: REMOVE_FROM_CART_FAIL,\n            payload: err\n        });\n        console.log(err);\n    })\n};\n\n// UPDATE CART\nexport const updateCart = () => (dispatch, getState) => {\n    axios.post('', {})\n    .then(res => {\n        dispatch({\n            type: UPDATE_CART_SUCCESS,\n            payload: res.data,\n        })\n    }).catch(err => {\n        dispatch({type: UPDATE_CART_FAIL});\n        console.log(err);\n    })\n};\n\n// CLEAR CART\nexport const clearCart = () => (dispatch, getState) => {\n    axios.post('', {})\n    .then(res => {\n        dispatch({\n            type: CLEAR_CART_SUCCESS,\n            payload: null,\n        })\n    }).catch(err => {\n        dispatch({type: CLEAR_CART_FAIL});\n        console.log(err);\n    })\n};"]},"metadata":{},"sourceType":"module"}