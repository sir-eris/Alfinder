{"ast":null,"code":"import axios from 'axios';\nimport { tokenConfig } from './auth';\nimport { GET_ORDERS, GET_ORDER_PRODUCTS, ORDER_PALCE_SUCCESS, ORDER_PALCE_FAIL, ORDER_RETURN_SUCCESS, ORDER_RETURN_FAIL, QUICK_BUY_SUCCESS, QUICK_BUY_FAIL } from \"./types\"; // GET ORDERS\n\nexport const getOrders = () => (dispatch, getState) => {\n  // shipping and billing info\n  axios.post('', null, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: GET_ORDERS,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // GET ORDER PRODUCTS\n\nexport const getOrderProducts = orderId => (dispatch, getState) => {\n  const body = JSON.stringify({\n    orderId\n  });\n  axios.post('', body, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: GET_ORDER_PRODUCTS,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // PLACE ORDER\n\nexport const placeOrder = () => (dispatch, getState) => {\n  axios.post('', null, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: ORDER_PALCE_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: ORDER_PALCE_FAIL,\n      payload: err\n    });\n    console.log(err);\n  });\n}; // QUICK BUY\n\nexport const quickBuy = (id, count) => (dispatch, getState) => {\n  const body = JSON.stringify({\n    product_id: id,\n    count\n  });\n  axios.post('', body, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: QUICK_BUY_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: QUICK_BUY_FAIL,\n      payload: err\n    });\n    console.log(err);\n  });\n}; // RETURN","map":{"version":3,"sources":["/Users/ramtinmir/Ventures/Alfinder Inc./Tech/Alfinder Inc. - Marketplace/Alfinder Store (discountinued)/src/app/core/actions/order.js"],"names":["axios","tokenConfig","GET_ORDERS","GET_ORDER_PRODUCTS","ORDER_PALCE_SUCCESS","ORDER_PALCE_FAIL","ORDER_RETURN_SUCCESS","ORDER_RETURN_FAIL","QUICK_BUY_SUCCESS","QUICK_BUY_FAIL","getOrders","dispatch","getState","post","then","res","type","payload","data","catch","err","console","log","getOrderProducts","orderId","body","JSON","stringify","placeOrder","quickBuy","id","count","product_id"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { tokenConfig } from './auth'\nimport {\n  GET_ORDERS,\n  GET_ORDER_PRODUCTS,\n  ORDER_PALCE_SUCCESS,\n  ORDER_PALCE_FAIL,\n  ORDER_RETURN_SUCCESS,\n  ORDER_RETURN_FAIL,\n  QUICK_BUY_SUCCESS,\n  QUICK_BUY_FAIL,\n} from \"./types\";\n\n\n// GET ORDERS\nexport const getOrders = () => (dispatch, getState) => { // shipping and billing info\n    axios.post('', null, tokenConfig(getState))\n    .then(res => {\n        dispatch({\n            type: GET_ORDERS,\n            payload: res.data,\n        })\n    }).catch(err => console.log(err))\n};\n\n// GET ORDER PRODUCTS\nexport const getOrderProducts = orderId => (dispatch, getState) => {\n    const body = JSON.stringify({orderId});\n\n    axios.post('', body, tokenConfig(getState))\n    .then(res => {\n        dispatch({\n            type: GET_ORDER_PRODUCTS,\n            payload: res.data,\n        })\n    }).catch(err => console.log(err))\n};\n\n// PLACE ORDER\nexport const placeOrder = () => (dispatch, getState) => {\n    axios.post('', null, tokenConfig(getState))\n    .then(res => {\n        dispatch({\n            type: ORDER_PALCE_SUCCESS,\n            payload: res.data,\n        })\n    }).catch(err => {\n        dispatch({\n            type: ORDER_PALCE_FAIL,\n            payload: err\n        });\n        console.log(err);\n    })\n};\n\n// QUICK BUY\nexport const quickBuy = (id, count) => (dispatch, getState) => {\n    const body = JSON.stringify({product_id: id, count});\n\n    axios.post('', body, tokenConfig(getState))\n    .then(res => {\n        dispatch({\n            type: QUICK_BUY_SUCCESS,\n            payload: res.data,\n        })\n    }).catch(err => {\n        dispatch({\n            type: QUICK_BUY_FAIL,\n            payload: err\n        });\n        console.log(err);\n    })\n};\n\n// RETURN\n"]},"metadata":{},"sourceType":"module"}